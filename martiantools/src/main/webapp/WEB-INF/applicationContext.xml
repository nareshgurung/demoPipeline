<?xml version="1.0" encoding="UTF-8"?>
<!-- The root tag of this file is very fittingly "beans". That is because we define our Spring Beans
within this file. Recall that a Spring Bean has its lifecycle managed by the IOC container. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
		
	<!-- Understand that the spring-context module actually gives us the ability to modify and
	configure our application context. For instance: -->
	<!-- This enables support for an annotation based application context configuration. In essence,
	it will allow me to define beans and wire them together using annotations instead of using XML
	to do so. -->
	<context:annotation-config/>
	<!-- You have to tell Spring which packages it should scan for annotations. -->
	<context:component-scan base-package="net.revature"/>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		
		<property name="driverClassName" value="org.mariadb.jdbc.Driver" />
		<property name="url" value="#{systemEnvironment['db_url']}"/>
		<property name="username" value="#{systemEnvironment['db_username']}"/>
		<property name="password" value="#{systemEnvironment['db_password']}" />
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="net.revature.models" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MariaDBDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
</beans>
